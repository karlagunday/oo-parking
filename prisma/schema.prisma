// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Space {
  id Int @id @default (autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  size SpaceSize @default(SMALL)

  entranceSpaces EntranceSpace[]
  activityLogs ActivityLog[]

  @@map("spaces")
}

enum SpaceSize {
  SMALL
  MEDIUM
  LARGE
}

model Entrance {
  id Int @id @default (autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  entranceSpaces EntranceSpace[]
  activityLogs ActivityLog[]

  @@map("entrances")
}

model EntranceSpace {
  id Int @id @default (autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entranceId Int
  entrance Entrance @relation(fields: [entranceId], references: [id])
  spaceId Int
  space Space @relation(fields: [spaceId], references: [id])
  distance Int

  @@map("entrance_spaces")
}

model Vehicle {
  id Int @id @default (autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plateNumber String @unique()
  size VehicleSize @default(SMALL)

  activityLogs ActivityLog[]

  @@map("vehicles")
}

enum VehicleSize {
  SMALL
  MEDIUM
  LARGE
}

model ActivityLog {
  id Int @id @default (autoincrement())
  createdAt DateTime @default(now())

  type ActivityType
  entranceId Int
  entrance Entrance @relation(fields: [entranceId], references: [id])
  spaceId Int
  space Space @relation(fields: [spaceId], references: [id])
  vehicleId Int
  vehicle Vehicle @relation(fields: [vehicleId], references: [id])

  @@map("activity_logs")
}

enum ActivityType {
  IN
  OUT
}
